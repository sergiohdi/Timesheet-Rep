@page "/change-password" 
@layout MinimalLayout

@inject ILocalStorageService localStorageSrv
@inject NavigationManager navManager
@inject AuthenticationStateProvider authProvider

<style>
    .top-right {
        position: absolute;
        top: 0;
        right: 0;
    }

    .cp-container {
        display: flex;
        height: 100vh;
        align-items: center;
    }

    .form-container {
        width: 600px;
        border: 1px solid #ccc;
        border-radius: 5px;
        height: 400px;
        padding: 20px;
    }
</style>

<div class="cp-container">
    <img src="images/HDI.png" alt="logo HDI" class="top-right" style="width:80px" />
    <br />
    <div class="container form-container">
        <ChangePasswordPopUp IsPopup="false" Email="@email"  ClosePopup="RedirectToLogin" />
    </div>
</div>

@code{
    private AuthenticationState authState = null;
    private string email = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        authState = await authProvider.GetAuthenticationStateAsync();
        if (authState.User.Identity?.IsAuthenticated == false)
        {
            navManager.NavigateTo("/login");
            return;
        }

        bool forceChangePassword = authState.User.GetForceChangePassword();
        if (!forceChangePassword)
        {
            navManager.NavigateTo("/");
        }

        email = authState.User.GetUserEmailId();
    }

    private async Task RedirectToLogin()
    {
        await localStorageSrv.RemoveItemAsync("token");
        ((JwtAuthStateProvider)authProvider).LogOut();
        navManager.NavigateTo("/login");
    }
}