@inject AuthenticationStateProvider authProvider

<style>
    .navbar-nav {
        display: flex; /* Ensures flexbox layout */
        background-color: #000; /* Black background for the navbar */
        width: 100%; /* Ensure the navbar takes full width */
        align-items: center; /* Center items vertically */
        padding: 0; /* Remove padding if any */
    }

    .nav-item .nav-link {
        color: #fff; /* White color text for visibility */
        display: flex; /* Align icon and text horizontally */
        align-items: center; /* Center align the content vertically */
        padding: .5rem 1rem; /* Padding around the links */
        /* font-size: 0.9em; */
    }

    .nav-text {
        color: #fff; /* White color text for visibility */
        display: flex; /* Align icon and text horizontally */
        align-items: center; /* Center align the content vertically */
        margin-right: .9rem;
        font-size: 0.8em; /* Font Size */
    }

        .nav-item .nav-link.active,
        .nav-item .nav-link:hover {
            background-color: #17a2b8; /* Teal background for active/hover state */
            color: #fff; /* Text remains white */
        }

    .telerik-icon-menu {
        margin-right: .0rem; /* Adjust this value as needed */
        color: gold;
    }

    .username {
        color: #fff; /* White color text for visibility */
        text-decoration: none; /* Remove any text decoration */
        background-color: #000;
        padding: 0;
    }
</style>

<ul class="navbar-nav">
    @if (userRole.Equals(GlobalConstants.ADMIN_ROLE))
    {
        <li class="nav-item dropdown">
            <a class="nav-link dropdown-toggle" href="#" role="button" data-toggle="dropdown" aria-expanded="false">
                <TelerikFontIcon Icon="@FontIcon.Gear" class="telerik-icon telerik-icon-menu" />
                Configuration
            </a>
            <div class="dropdown-menu">
                <NavLink class="dropdown-item" href="clients">
                    <TelerikFontIcon Icon="@FontIcon.TellAFriend" class="telerik-icon telerik-icon-menu" />
                    Clients
                </NavLink>
                <NavLink class="dropdown-item" href="departments">
                    <TelerikFontIcon Icon="@FontIcon.ChevronDoubleRight" class="telerik-icon telerik-icon-menu" />
                    Departments
                </NavLink>
                <NavLink class="dropdown-item" href="projects">
                    <TelerikFontIcon Icon="@FontIcon.ChartAreaRange" class="telerik-icon telerik-icon-menu" />
                    Projects
                </NavLink>
                <NavLink class="dropdown-item" href="activities">
                    <TelerikFontIcon Icon="@FontIcon.SetColumnPosition" class="telerik-icon telerik-icon-menu" />
                    Activities
                </NavLink>
                <NavLink class="dropdown-item" href="users">
                    <TelerikFontIcon Icon="@FontIcon.User" class="telerik-icon telerik-icon-menu" />
                    Users
                </NavLink>
            </div>
        </li>
    }

    @if (userRole.Equals(GlobalConstants.ADMIN_ROLE) || userRole.Equals(GlobalConstants.WTS_ROLE))
    {
        <li class="nav-item">
            <NavLink class="nav-link" href="payroll">
                <TelerikFontIcon Icon="@FontIcon.ListUnorderedSquare" class="telerik-icon telerik-icon-menu" />
                Payroll
            </NavLink>
        </li>
    }

    @* Todo: Add validation for supervisor *@
    @if (userRole.Equals(GlobalConstants.ADMIN_ROLE))
    {
        <li class="nav-item">
            <NavLink class="nav-link" href="team">
                <TelerikFontIcon Icon="@FontIcon.CheckOutline" class="telerik-icon telerik-icon-menu" />
                Team
            </NavLink>
        </li>
    }

    <li class="nav-item">
        <NavLink class="nav-link" href="timesheet">
            <TelerikFontIcon Icon="@FontIcon.ClockArrowRotate" class="telerik-icon telerik-icon-menu" />
            Timesheet
        </NavLink>
    </li>

</ul>

@code {
    private string userRole = GlobalConstants.USER_ROLE;

    protected override async Task OnInitializedAsync()
    {
        var authState = await authProvider.GetAuthenticationStateAsync();
        userRole = authState.User.GetUserRole();
    }
}