// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using Timesheet.Api.Models;

namespace Timesheet.Api.Repositories.EF_Implementations
{
    public partial class TimesheetContext : DbContext
    {
        public TimesheetContext()
        {
        }

        public TimesheetContext(DbContextOptions<TimesheetContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Activity> Activity { get; set; }
        public virtual DbSet<ApprovalStatus> ApprovalStatus { get; set; }
        public virtual DbSet<Approvals> Approvals { get; set; }
        public virtual DbSet<Client> Client { get; set; }
        public virtual DbSet<CostCenter> CostCenter { get; set; }
        public virtual DbSet<Department> Department { get; set; }
        public virtual DbSet<EmployeeType> EmployeeType { get; set; }
        public virtual DbSet<General> General { get; set; }
        public virtual DbSet<ParentDepartment> ParentDepartment { get; set; }
        public virtual DbSet<Project> Project { get; set; }
        public virtual DbSet<ProjectHasUser> ProjectHasUser { get; set; }
        public virtual DbSet<RpTimeSheetData> RpTimeSheetData { get; set; }
        public virtual DbSet<Substitute> Substitute { get; set; }
        public virtual DbSet<TimeOff> TimeOff { get; set; }
        public virtual DbSet<TimesheetControl> TimesheetControl { get; set; }
        public virtual DbSet<TimesheetType> TimesheetType { get; set; }
        public virtual DbSet<TranslationMappingsActivityGrouping> TranslationMappingsActivityGrouping { get; set; }
        public virtual DbSet<User> User { get; set; }
        public virtual DbSet<UserActivityCode> UserActivityCode { get; set; }
        public virtual DbSet<UserSelectAct> UserSelectAct { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Activity>(entity =>
            {
                entity.ToTable("Activity", "dbo");

                entity.Property(e => e.ActivityCode).HasMaxLength(50);

                entity.Property(e => e.ActivityName)
                    .IsRequired()
                    .HasMaxLength(255);

                entity.Property(e => e.CreatedDate).HasColumnType("datetime");

                entity.Property(e => e.CreatedIp)
                    .HasMaxLength(80)
                    .HasColumnName("CreatedIP");

                entity.Property(e => e.CreatedMacAddress).HasMaxLength(50);

                entity.Property(e => e.Description).HasMaxLength(255);

                entity.Property(e => e.UpdatedDate).HasColumnType("datetime");

                entity.Property(e => e.UpdatedIp)
                    .HasMaxLength(80)
                    .HasColumnName("UpdatedIP");

                entity.Property(e => e.UpdatedMacAddress).HasMaxLength(50);
            });

            modelBuilder.Entity<ApprovalStatus>(entity =>
            {
                entity.ToTable("ApprovalStatus", "dbo");

                entity.Property(e => e.Approvalstatusid)
                    .ValueGeneratedNever()
                    .HasColumnName("approvalstatusid");

                entity.Property(e => e.Appstatusname)
                    .HasMaxLength(255)
                    .HasColumnName("appstatusname");
            });

            modelBuilder.Entity<Approvals>(entity =>
            {
                entity.HasKey(e => e.ApprovalId);

                entity.ToTable("Approvals", "dbo");

                entity.Property(e => e.Comments)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.Duration).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.EndDate).HasColumnType("date");

                entity.Property(e => e.Period).HasColumnType("date");

                entity.Property(e => e.StartDate).HasColumnType("date");

                entity.HasOne(d => d.ApprovalStatus)
                    .WithMany(p => p.Approvals)
                    .HasForeignKey(d => d.ApprovalStatusId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Approvals__Appro__1EA48E88");

                entity.HasOne(d => d.TimeOff)
                    .WithMany(p => p.Approvals)
                    .HasForeignKey(d => d.TimeOffId)
                    .HasConstraintName("FK__Approvals__TimeO__1F98B2C1");

                entity.HasOne(d => d.User)
                    .WithMany(p => p.Approvals)
                    .HasForeignKey(d => d.UserId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Approvals__UserI__1DB06A4F");
            });

            modelBuilder.Entity<Client>(entity =>
            {
                entity.ToTable("Client", "dbo");

                entity.HasIndex(e => e.Name, "UC_Client_Name")
                    .IsUnique();

                entity.Property(e => e.Address1).HasMaxLength(255);

                entity.Property(e => e.Address2).HasMaxLength(255);

                entity.Property(e => e.ApcurrencyCode)
                    .HasMaxLength(3)
                    .HasColumnName("APCurrencyCode")
                    .HasDefaultValueSql("(N'CAD')");

                entity.Property(e => e.ApvendorId)
                    .HasMaxLength(50)
                    .HasColumnName("APVendorID")
                    .HasDefaultValueSql("(N'HUNDIC')");

                entity.Property(e => e.BillingCurrencyCode)
                    .HasMaxLength(3)
                    .HasDefaultValueSql("(N'CAD')");

                entity.Property(e => e.BillingGlaccount)
                    .HasMaxLength(50)
                    .HasColumnName("BillingGLAccount")
                    .HasDefaultValueSql("(N'7780HDI')");

                entity.Property(e => e.City).HasMaxLength(100);

                entity.Property(e => e.Code).HasMaxLength(50);

                entity.Property(e => e.Country).HasMaxLength(100);

                entity.Property(e => e.CreatedDate).HasColumnType("datetime");

                entity.Property(e => e.CreatedIp)
                    .HasMaxLength(80)
                    .HasColumnName("CreatedIP");

                entity.Property(e => e.CreatedMacAddress).HasMaxLength(50);

                entity.Property(e => e.DefaultBillingRateAmount).HasColumnType("decimal(12, 4)");

                entity.Property(e => e.Fax).HasMaxLength(20);

                entity.Property(e => e.Group).HasMaxLength(50);

                entity.Property(e => e.GstratePercent)
                    .HasColumnType("decimal(5, 2)")
                    .HasColumnName("GSTRatePercent")
                    .HasDefaultValueSql("((0.05))");

                entity.Property(e => e.Name).HasMaxLength(255);

                entity.Property(e => e.OriginalCode).HasMaxLength(50);

                entity.Property(e => e.StateProvince).HasMaxLength(100);

                entity.Property(e => e.Telephone).HasMaxLength(20);

                entity.Property(e => e.UpdatedDate).HasColumnType("datetime");

                entity.Property(e => e.UpdatedIp)
                    .HasMaxLength(80)
                    .HasColumnName("UpdatedIP");

                entity.Property(e => e.UpdatedMacAddress).HasMaxLength(50);

                entity.Property(e => e.Website).HasMaxLength(100);

                entity.Property(e => e.ZipPostalCode).HasMaxLength(20);
            });

            modelBuilder.Entity<CostCenter>(entity =>
            {
                entity.ToTable("CostCenter", "dbo");

                entity.Property(e => e.Costcenterid).HasColumnName("costcenterid");

                entity.Property(e => e.Costcentername)
                    .HasMaxLength(255)
                    .HasColumnName("costcentername");

                entity.Property(e => e.CreatedDate).HasColumnType("datetime");

                entity.Property(e => e.CreatedIp)
                    .HasMaxLength(80)
                    .HasColumnName("CreatedIP");

                entity.Property(e => e.CreatedMacAddress).HasMaxLength(50);

                entity.Property(e => e.UpdatedDate).HasColumnType("datetime");

                entity.Property(e => e.UpdatedIp)
                    .HasMaxLength(80)
                    .HasColumnName("UpdatedIP");

                entity.Property(e => e.UpdatedMacAddress).HasMaxLength(50);
            });

            modelBuilder.Entity<Department>(entity =>
            {
                entity.ToTable("Department", "dbo");

                entity.Property(e => e.Code).HasMaxLength(50);

                entity.Property(e => e.CostCenterGroup).HasMaxLength(100);

                entity.Property(e => e.CreatedDate).HasColumnType("datetime");

                entity.Property(e => e.CreatedIp)
                    .HasMaxLength(80)
                    .HasColumnName("CreatedIP");

                entity.Property(e => e.CreatedMacAddress).HasMaxLength(50);

                entity.Property(e => e.Name).HasMaxLength(255);

                entity.Property(e => e.UpdatedDate).HasColumnType("datetime");

                entity.Property(e => e.UpdatedIp)
                    .HasMaxLength(80)
                    .HasColumnName("UpdatedIP");

                entity.Property(e => e.UpdatedMacAddress).HasMaxLength(50);
            });

            modelBuilder.Entity<EmployeeType>(entity =>
            {
                entity.HasKey(e => e.Emptypeid);

                entity.ToTable("EmployeeType", "dbo");

                entity.Property(e => e.Emptypeid).HasColumnName("emptypeid");

                entity.Property(e => e.Employeetypeid)
                    .HasMaxLength(255)
                    .HasColumnName("employeetypeid");

                entity.Property(e => e.Employeetypename)
                    .HasMaxLength(255)
                    .HasColumnName("employeetypename");
            });

            modelBuilder.Entity<General>(entity =>
            {
                entity.HasKey(e => e.GralId);

                entity.ToTable("General", "dbo");

                entity.Property(e => e.GralGroup).HasMaxLength(100);

                entity.Property(e => e.Type).HasMaxLength(15);

                entity.Property(e => e.Value).HasMaxLength(100);
            });

            modelBuilder.Entity<ParentDepartment>(entity =>
            {
                entity.ToTable("ParentDepartment", "dbo");

                entity.Property(e => e.Id).ValueGeneratedNever();

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(255);
            });

            modelBuilder.Entity<Project>(entity =>
            {
                entity.ToTable("Project", "dbo");

                entity.Property(e => e.Id).HasComment("Project ID");

                entity.Property(e => e.CreatedDate).HasColumnType("datetime");

                entity.Property(e => e.CreatedIp)
                    .HasMaxLength(80)
                    .HasColumnName("CreatedIP");

                entity.Property(e => e.CreatedMacAddress).HasMaxLength(50);

                entity.Property(e => e.Description).HasMaxLength(255);

                entity.Property(e => e.EntryEndDate).HasColumnType("datetime");

                entity.Property(e => e.EntryStartDate).HasColumnType("datetime");

                entity.Property(e => e.Name).HasMaxLength(255);

                entity.Property(e => e.ProjectCode).HasMaxLength(50);

                entity.Property(e => e.TimeExpenseEntryType).HasMaxLength(50);

                entity.Property(e => e.UdfAudience).HasMaxLength(255);

                entity.Property(e => e.UdfGroups).HasMaxLength(255);

                entity.Property(e => e.UdfPlpCostCenter).HasMaxLength(255);

                entity.Property(e => e.UdfProjectType).HasMaxLength(255);

                entity.Property(e => e.UpdatedDate).HasColumnType("datetime");

                entity.Property(e => e.UpdatedIp)
                    .HasMaxLength(80)
                    .HasColumnName("UpdatedIP");

                entity.Property(e => e.UpdatedMacAddress).HasMaxLength(50);

                entity.HasOne(d => d.Client)
                    .WithMany(p => p.Project)
                    .HasForeignKey(d => d.ClientId)
                    .HasConstraintName("FK__Project__ClientI__31EC6D26");
            });

            modelBuilder.Entity<ProjectHasUser>(entity =>
            {
                entity.HasKey(e => e.Puid)
                    .HasName("PK__ProjectH__B280974D2C760010");

                entity.ToTable("ProjectHasUser", "dbo");

                entity.Property(e => e.Puid).HasColumnName("PUId");

                entity.HasOne(d => d.Project)
                    .WithMany(p => p.ProjectHasUser)
                    .HasForeignKey(d => d.ProjectId)
                    .HasConstraintName("FK__ProjectHa__UserI__2CF2ADDF");

                entity.HasOne(d => d.User)
                    .WithMany(p => p.ProjectHasUser)
                    .HasForeignKey(d => d.UserId)
                    .HasConstraintName("FK__ProjectHa__UserI__2DE6D218");
            });

            modelBuilder.Entity<RpTimeSheetData>(entity =>
            {
                entity.HasKey(e => e.TimesheetId)
                    .HasName("PK_RP_TimeSheetData_temp1");

                entity.ToTable("RP_TimeSheetData", "dbo");

                entity.Property(e => e.TimesheetId).HasColumnName("timesheetId");

                entity.Property(e => e.ActivityCode).HasMaxLength(50);

                entity.Property(e => e.ActivityName).HasMaxLength(255);

                entity.Property(e => e.Approvalstatus).HasColumnName("approvalstatus");

                entity.Property(e => e.Billable).HasColumnName("billable");

                entity.Property(e => e.BillableHours)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("billable_hours");

                entity.Property(e => e.Billablename)
                    .HasMaxLength(255)
                    .HasColumnName("billablename");

                entity.Property(e => e.Billingmethod)
                    .HasMaxLength(255)
                    .HasColumnName("billingmethod");

                entity.Property(e => e.Billingpercentage)
                    .HasColumnType("numeric(19, 4)")
                    .HasColumnName("billingpercentage");

                entity.Property(e => e.BillingpercentageRatio)
                    .HasColumnType("numeric(19, 4)")
                    .HasColumnName("billingpercentage_ratio");

                entity.Property(e => e.Cellcomments).HasColumnName("cellcomments");

                entity.Property(e => e.Clientcode)
                    .HasMaxLength(50)
                    .HasColumnName("clientcode");

                entity.Property(e => e.Clientid).HasColumnName("clientid");

                entity.Property(e => e.Clientname)
                    .HasMaxLength(255)
                    .HasColumnName("clientname");

                entity.Property(e => e.Clientuserid).HasColumnName("clientuserid");

                entity.Property(e => e.Comments).HasColumnName("comments");

                entity.Property(e => e.CuEmail)
                    .HasMaxLength(255)
                    .HasColumnName("cu_email");

                entity.Property(e => e.CuName)
                    .HasMaxLength(50)
                    .HasColumnName("cu_name");

                entity.Property(e => e.Departmentcode)
                    .HasMaxLength(50)
                    .HasColumnName("departmentcode");

                entity.Property(e => e.Departmentname)
                    .HasMaxLength(255)
                    .HasColumnName("departmentname");

                entity.Property(e => e.Email)
                    .HasMaxLength(255)
                    .HasColumnName("email");

                entity.Property(e => e.Employeeid)
                    .HasMaxLength(255)
                    .HasColumnName("employeeid");

                entity.Property(e => e.Employeetypeid)
                    .HasMaxLength(255)
                    .HasColumnName("employeetypeid");

                entity.Property(e => e.Employeetypename)
                    .HasMaxLength(255)
                    .HasColumnName("employeetypename");

                entity.Property(e => e.Enddate)
                    .HasColumnType("datetime")
                    .HasColumnName("enddate");

                entity.Property(e => e.Entrydate)
                    .HasColumnType("datetime")
                    .HasColumnName("entrydate");

                entity.Property(e => e.Fulltaskname)
                    .HasMaxLength(255)
                    .HasColumnName("fulltaskname");

                entity.Property(e => e.Htasktimeoffname)
                    .HasMaxLength(255)
                    .HasColumnName("htasktimeoffname");

                entity.Property(e => e.Loginname)
                    .HasMaxLength(255)
                    .HasColumnName("loginname");

                entity.Property(e => e.NonBillableHours)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("non_billable_hours");

                entity.Property(e => e.PlEmail)
                    .HasMaxLength(255)
                    .HasColumnName("pl_email");

                entity.Property(e => e.PlName)
                    .HasMaxLength(50)
                    .HasColumnName("pl_name");

                entity.Property(e => e.ProjectHours)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("project_hours");

                entity.Property(e => e.Projectcode)
                    .HasMaxLength(255)
                    .HasColumnName("projectcode");

                entity.Property(e => e.Projectdescription)
                    .HasMaxLength(255)
                    .HasColumnName("projectdescription");

                entity.Property(e => e.Projectid).HasColumnName("projectid");

                entity.Property(e => e.Projectleaderid).HasColumnName("projectleaderid");

                entity.Property(e => e.Projectname)
                    .HasMaxLength(255)
                    .HasColumnName("projectname");

                entity.Property(e => e.Reportperiodid).HasColumnName("reportperiodid");

                entity.Property(e => e.Rowposition).HasColumnName("rowposition");

                entity.Property(e => e.Rpinfo1)
                    .HasMaxLength(255)
                    .HasColumnName("rpinfo1");

                entity.Property(e => e.Rpinfo2)
                    .HasMaxLength(255)
                    .HasColumnName("rpinfo2");

                entity.Property(e => e.Rpinfo3)
                    .HasMaxLength(255)
                    .HasColumnName("rpinfo3");

                entity.Property(e => e.Rpinfo4)
                    .HasMaxLength(255)
                    .HasColumnName("rpinfo4");

                entity.Property(e => e.Rpinfo5)
                    .HasMaxLength(255)
                    .HasColumnName("rpinfo5");

                entity.Property(e => e.Startdate)
                    .HasColumnType("datetime")
                    .HasColumnName("startdate");

                entity.Property(e => e.Supervisorid).HasColumnName("supervisorid");

                entity.Property(e => e.Supervisorname)
                    .HasMaxLength(255)
                    .HasColumnName("supervisorname");

                entity.Property(e => e.Taskinfo1)
                    .HasMaxLength(255)
                    .HasColumnName("taskinfo1");

                entity.Property(e => e.Taskinfo10)
                    .HasMaxLength(255)
                    .HasColumnName("taskinfo10");

                entity.Property(e => e.Taskinfo2)
                    .HasMaxLength(255)
                    .HasColumnName("taskinfo2");

                entity.Property(e => e.Taskinfo3)
                    .HasMaxLength(255)
                    .HasColumnName("taskinfo3");

                entity.Property(e => e.Taskinfo4)
                    .HasMaxLength(255)
                    .HasColumnName("taskinfo4");

                entity.Property(e => e.Taskinfo5)
                    .HasMaxLength(255)
                    .HasColumnName("taskinfo5");

                entity.Property(e => e.Taskinfo6)
                    .HasMaxLength(255)
                    .HasColumnName("taskinfo6");

                entity.Property(e => e.Taskinfo7)
                    .HasMaxLength(255)
                    .HasColumnName("taskinfo7");

                entity.Property(e => e.Taskinfo8)
                    .HasMaxLength(255)
                    .HasColumnName("taskinfo8");

                entity.Property(e => e.Taskinfo9)
                    .HasMaxLength(255)
                    .HasColumnName("taskinfo9");

                entity.Property(e => e.Taskname1)
                    .HasMaxLength(255)
                    .HasColumnName("taskname1");

                entity.Property(e => e.Tasktimeoffcode)
                    .HasMaxLength(50)
                    .HasColumnName("tasktimeoffcode");

                entity.Property(e => e.Tasktimeoffid).HasColumnName("tasktimeoffid");

                entity.Property(e => e.Tasktimeoffname)
                    .HasMaxLength(255)
                    .HasColumnName("tasktimeoffname");

                entity.Property(e => e.Tasktimesheetid).HasColumnName("tasktimesheetid");

                entity.Property(e => e.Teinfo1)
                    .HasMaxLength(255)
                    .HasColumnName("teinfo1");

                entity.Property(e => e.Teinfo2)
                    .HasMaxLength(255)
                    .HasColumnName("teinfo2");

                entity.Property(e => e.Teinfo3)
                    .HasMaxLength(255)
                    .HasColumnName("teinfo3");

                entity.Property(e => e.Teinfo4)
                    .HasMaxLength(255)
                    .HasColumnName("teinfo4");

                entity.Property(e => e.Teinfo5)
                    .HasMaxLength(255)
                    .HasColumnName("teinfo5");

                entity.Property(e => e.TimeOffHours)
                    .HasColumnType("decimal(18, 12)")
                    .HasColumnName("time_off_hours");

                entity.Property(e => e.Timesheetentryid).HasColumnName("timesheetentryid");

                entity.Property(e => e.Timesheetperiod)
                    .HasColumnType("datetime")
                    .HasColumnName("timesheetperiod");

                entity.Property(e => e.TotalHours)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("total_hours");

                entity.Property(e => e.Ttinfo1)
                    .HasMaxLength(255)
                    .HasColumnName("ttinfo1");

                entity.Property(e => e.Ttinfo2)
                    .HasMaxLength(255)
                    .HasColumnName("ttinfo2");

                entity.Property(e => e.Ttinfo3)
                    .HasMaxLength(255)
                    .HasColumnName("ttinfo3");

                entity.Property(e => e.Ttinfo4)
                    .HasMaxLength(255)
                    .HasColumnName("ttinfo4");

                entity.Property(e => e.Ttinfo5)
                    .HasMaxLength(255)
                    .HasColumnName("ttinfo5");

                entity.Property(e => e.UserGroupName).HasMaxLength(50);

                entity.Property(e => e.UserGroupSetName).HasMaxLength(50);

                entity.Property(e => e.Userid).HasColumnName("userid");

                entity.Property(e => e.Userinfo1)
                    .HasMaxLength(255)
                    .HasColumnName("userinfo1");

                entity.Property(e => e.Userinfo2)
                    .HasMaxLength(255)
                    .HasColumnName("userinfo2");

                entity.Property(e => e.Userinfo3)
                    .HasMaxLength(255)
                    .HasColumnName("userinfo3");

                entity.Property(e => e.Userinfo4)
                    .HasMaxLength(255)
                    .HasColumnName("userinfo4");

                entity.Property(e => e.Userinfo5)
                    .HasMaxLength(255)
                    .HasColumnName("userinfo5");

                entity.Property(e => e.Username)
                    .HasMaxLength(255)
                    .HasColumnName("username");
            });

            modelBuilder.Entity<Substitute>(entity =>
            {
                entity.HasKey(e => e.SubId);

                entity.ToTable("Substitute", "dbo");
            });

            modelBuilder.Entity<TimeOff>(entity =>
            {
                entity.ToTable("TimeOff", "dbo");

                entity.Property(e => e.TimeOffCode).HasMaxLength(255);

                entity.Property(e => e.TimeOffName)
                    .IsRequired()
                    .HasMaxLength(255);
            });

            modelBuilder.Entity<TimesheetControl>(entity =>
            {
                entity.HasKey(e => e.TimesheetPeriodId);

                entity.ToTable("TimesheetControl", "dbo");

                entity.Property(e => e.TimesheetPeriodId).HasColumnName("TimesheetPeriodID");

                entity.Property(e => e.EndDate).HasColumnType("datetime");

                entity.Property(e => e.StartDate).HasColumnType("datetime");

                entity.Property(e => e.TimesheetPeriod).HasColumnType("datetime");
            });

            modelBuilder.Entity<TimesheetType>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TimesheetType", "dbo");

                entity.Property(e => e.TemplateName)
                    .HasMaxLength(100)
                    .IsFixedLength();

                entity.Property(e => e.TimeTemplateDesc)
                    .HasMaxLength(300)
                    .IsFixedLength();

                entity.Property(e => e.TimeTemplateId).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<TranslationMappingsActivityGrouping>(entity =>
            {
                entity.ToTable("TranslationMappings_ActivityGrouping", "dbo");

                entity.HasIndex(e => e.InitialValue, "CIX_TranslationMappings_ActivityGrouping");

                entity.Property(e => e.InitialValue)
                    .IsRequired()
                    .HasMaxLength(128)
                    .IsUnicode(false);

                entity.Property(e => e.TransformedValue)
                    .IsRequired()
                    .HasMaxLength(128)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<User>(entity =>
            {
                entity.ToTable("User", "dbo");

                entity.HasIndex(e => e.ExternalId, "NonClusteredIndex-20141203-103641");

                entity.HasIndex(e => e.Id, "NonClusteredIndex-20141203-104025");

                entity.HasIndex(e => e.ExternalId, "NonClusteredIndex-20141203-105505");

                entity.Property(e => e.AccountExpiry).HasColumnType("datetime");

                entity.Property(e => e.CreatedDate).HasColumnType("datetime");

                entity.Property(e => e.CreatedIp)
                    .HasMaxLength(80)
                    .HasColumnName("CreatedIP");

                entity.Property(e => e.CreatedMacAddress).HasMaxLength(50);

                entity.Property(e => e.Domain).HasMaxLength(100);

                entity.Property(e => e.Email).HasMaxLength(100);

                entity.Property(e => e.EndDate).HasColumnType("datetime");

                entity.Property(e => e.ExternalEmail).HasMaxLength(100);

                entity.Property(e => e.ExternalId).HasMaxLength(50);

                entity.Property(e => e.FirstName).HasMaxLength(100);

                entity.Property(e => e.JobTitle).HasMaxLength(100);

                entity.Property(e => e.LastName).HasMaxLength(100);

                entity.Property(e => e.LoginName).HasMaxLength(200);

                entity.Property(e => e.OfflineEmail).HasMaxLength(100);

                entity.Property(e => e.PlpmarkUp).HasColumnName("PLPMarkUp");

                entity.Property(e => e.PositionTitle).HasMaxLength(100);

                entity.Property(e => e.ReportsTo).HasMaxLength(100);

                entity.Property(e => e.StartDate).HasColumnType("datetime");

                entity.Property(e => e.UpdatedDate).HasColumnType("datetime");

                entity.Property(e => e.UpdatedIp)
                    .HasMaxLength(80)
                    .HasColumnName("UpdatedIP");

                entity.Property(e => e.UpdatedMacAddress).HasMaxLength(50);

                entity.HasOne(d => d.Department)
                    .WithMany(p => p.User)
                    .HasForeignKey(d => d.DepartmentId)
                    .HasConstraintName("FK__User__Department__4222D4EF");

                entity.HasOne(d => d.EmpType)
                    .WithMany(p => p.User)
                    .HasForeignKey(d => d.EmpTypeId)
                    .HasConstraintName("FK__User__EmpTypeId__4316F928");

                entity.HasOne(d => d.SubstituteUserNavigation)
                    .WithMany(p => p.InverseSubstituteUserNavigation)
                    .HasForeignKey(d => d.SubstituteUser)
                    .HasConstraintName("FK__User__Substitute__440B1D61");
            });

            modelBuilder.Entity<UserActivityCode>(entity =>
            {
                entity.ToTable("UserActivityCode", "dbo");

                entity.Property(e => e.ActivityCode).HasMaxLength(50);

                entity.Property(e => e.ActivityName).HasMaxLength(50);

                entity.Property(e => e.CostCenterGroup).HasMaxLength(255);

                entity.Property(e => e.CreatedDate).HasColumnType("datetime");

                entity.Property(e => e.CreatedIp)
                    .HasMaxLength(80)
                    .HasColumnName("CreatedIP");

                entity.Property(e => e.CreatedMacAddress).HasMaxLength(50);

                entity.Property(e => e.DepartmentName).HasMaxLength(255);

                entity.Property(e => e.FirstName).HasMaxLength(128);

                entity.Property(e => e.LastName).HasMaxLength(128);

                entity.Property(e => e.PositionTitle).HasMaxLength(255);

                entity.Property(e => e.UpdatedDate).HasColumnType("datetime");

                entity.Property(e => e.UpdatedIp)
                    .HasMaxLength(80)
                    .HasColumnName("UpdatedIP");

                entity.Property(e => e.UpdatedMacAddress).HasMaxLength(50);

                entity.Property(e => e.UserTitle).HasMaxLength(255);
            });

            modelBuilder.Entity<UserSelectAct>(entity =>
            {
                entity.HasKey(e => e.UserId);

                entity.ToTable("UserSelectAct", "dbo");

                entity.Property(e => e.UserId).ValueGeneratedNever();
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}